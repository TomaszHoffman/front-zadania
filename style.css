/* BEM methodology*/
/* Zadanie 1, 2  

1.Nadaj każdemu z elementów klasę zgodną z wybraną przez Ciebie metodologią
(napisz jaka to metodologia 
w komentarzu na samej górze kodu CSS).
2.Nadaj każdemu elementowi ​<a>​, który nie jest dzieckiem elementu ​<li>​ 
kolor różowy z przezroczystością ustawioną na 75% */

.container__link{
    color: pink;
    opacity: 75%;
    
}

/* zadanie 3  Nadaj każdemu elementowi ​<a>​ style, które będą aktywne jedynie w momenciekiedy najedziemy na element kursorem. 
Zmień grubość tekstu oraz przesuń go o4px w prawo, całe przejście powinno trwać 0.4s.*/


.container__link:hover{
  font-weight: bold;
  padding-left: 4px;
  transition: 0.4s;
}



.container__link{
    color: pink;
    opacity: 75%;
}

/* zadadanie 4 Każdemu elementowi <a> bez atrybutu href zmień 
kursor (który pojawia się w momencie najechania na element) na 
myślny kursor dla zablokowanego elementu (Hint: właściwość 
będzie miała wartość: not-allowed). */

.container__link--disabled{
    cursor: not-allowed;
    
  }
/* zadanie 5 Nadaj każdemu elementowi <ol>, który jest dzieckiem elementu
 <ul> styl zwiększający wielkość tekstu do 18px. */
 
 .container__list-item--font{
    font-size: 18px;
  }
  
  /* zadanie 6 Nadaj każdemu elementowi <p>, 
  który następuje bezpośrednio po elemencie <ul> 
  marginesy lewy oraz dolny i ustaw ich wartość na 10px.*/

.paragraph{
    margin-left: 10px;
    margin-bottom: 10px;
  }
  
  /* zadanie 7 Nadaj każdemu elementowi <ul>, który jest dzieckiem 
  elementu <ul> takie style, które usuną jego punktory.*/

  .container__list--mod{
  list-style: none;
}
  
/* Zadanie 8 Nadaj każdemu elementowi <li>, który jest 2 w kolejności dzieckiem style, które sprawią, że:
Znajdzie się 20px od prawej krawędzi okna
Utrzyma tą pozycję niezależnie od pozycji scrolla
Każdy następny będzie 10px niżej od poprzedniego
Pierwszy element niech znajdzie się 10px od górnej krawędzi okna.*/

.list_item:nth-child(2){
    position: sticky;
    right: 20px;
    bottom: 10px;

}

.list_item:nth-child(2) + :nth-child(n+2){
    margin-top: 10px;
}


.list_item:nth-child(2) :first-child{
    position: sticky;
    margin-top: 10px;

}
/* zadanie 9 Nadaj każdemu elementowi <ol> oraz ich dzieciom <li> style, które sprawią, że elementy <li>:
 Wyświetlą się w jednym wierszu
Będą miały dokładnie taką samą szerokość tak aby wypełnić całą szerokość okna
W momencie dodania kolejnego elementu <li> ich szerokość się automatycznie zmieni i każdy z poprzednich warunków będzie nadal spełniony
Będą miały po 10px marginesu wewnętrznego górnego oraz dolnego
Będą miały czerwone obramowanie o szerokości 1px
Będą miały wycentrowany tekst - w pionie i w poziomie */

ol li{
    display: inline-flex;
    width: auto;
    flex-grow: 1;
    border: 1px solid red;
    margin: top 10px bottom 10px;
    justify-content: center;
    align-items: center;
}

/* zadanie 10 Dodaj jeden tag HTML, który uznasz za słuszny i nadaj mu takie style aby wyglądał jak tzw. Hamburger dla menu na urządzeniach mobilnych. Element powinien mieć 2 stany:
Domyślny:
Aktywny, w momencie najechania kursorem, przejście powinno trwać 0.6s:*/

.hamburger{
  width: 40px;
  height: 35px;
  border: 0px;
  border-top: 5px solid black;
  background: transparent;
  cursor: pointer;
  position: relative;
  outline: none;
  transition-duration: 0.6s; transform: linear;
}

.hamburger::before, .hamburger::after{
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  border-top: 5px solid black;
  transform: translateY(10px);
}

.hamburger::after{
  transform: translateY(25px);
  transition-duration: 0.6s; transform: linear;
}

.hamburger:focus{
  transform: rotate(45deg) translateY(5px);
  border: none;

}

.hamburger:focus::after{
  transform: rotate(-90deg) translateX(-10px) ;
  
}
